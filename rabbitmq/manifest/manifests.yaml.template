apiVersion: marketplace.cloud.google.com/v1
kind: Application
metadata:
  annotations:
    marketplace.cloud.google.com: |
      {
        "name":"RabbitMQ",
        "version":"v3.6.15",
        "description":"RabbitMQ is an open source messaging system that implements the Advanced Message Queueing Protocol to serve a variety of messaging applications.",
        "url":"https://www.rabbitmq.com/",
        "tagline":"A robust AMQP-compilant messaging system",
        "support_info":"Community support",
        "documentations":[{
          "url":"https://github.com/GoogleCloudPlatform/rabbitmq-docker/blob/master/3/README.md",
          "title":"Getting Started",
          "description":"Get started with Google Cloud Platform's RabbitMQ container image"
        }]
      }
  ApplicationStatus:
    ready: true
  generation: 0
  initializers: null
  name: "$APP_INSTANCE_NAME"
  namespace: "$NAMESPACE"
spec:
  components:
  - $APP_INSTANCE_NAME-controller:
      kind: Deployment
  - $APP_INSTANCE_NAME-controller-sa:
      kind: ServiceAccount
  - $APP_INSTANCE_NAME-controller-approle:
      kind: Role
  - $APP_INSTANCE_NAME-controller-apprb:
      kind: RoleBinding
  - $APP_INSTANCE_NAME-controller-editrb:
      kind: RoleBinding
  - $APP_INSTANCE_NAME-rabbitmq:
      kind: Pod
  - $APP_INSTANCE_NAME-rabbitmq-svc:
      kind: Service
  - $APP_INSTANCE_NAME-deployer:
      kind: Job
---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: $APP_INSTANCE_NAME-rabbitmq
  labels: &RabbitMQDeploymentLabels
    app: $APP_INSTANCE_NAME
    component: rabbitmq-server
spec:
  selector:
    matchLabels: *RabbitMQDeploymentLabels
  serviceName: $APP_INSTANCE_NAME-rabbitmq-svc
  replicas: 1
  template:
    metadata:
      labels: *RabbitMQDeploymentLabels
    spec:
      terminationGracePeriodSeconds: 180
      containers:
      - name: rabbitmq
        image: launcher.gcr.io/google/rabbitmq3:latest
        imagePullPolicy: Always
        ports:
        - name: clitool
          containerPort: 25672
        - name: client-access-2
          containerPort: 5672
        - name: client-access-1
          containerPort: 5671
        - name: epmd
          containerPort: 4369
        volumeMounts:
        - name: $APP_INSTANCE_NAME-rabbitmq-pvc
          mountPath: /var/lib/rabbitmq
  volumeClaimTemplates:
  - metadata:
      name: $APP_INSTANCE_NAME-rabbitmq-pvc
      labels: *RabbitMQDeploymentLabels
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard
      resources:
        requests:
          storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: $APP_INSTANCE_NAME-rabbitmq-svc
  labels:
    app: $APP_INSTANCE_NAME
    component: rabbitmq-server
spec:
  ports:
  - name: client-access-2
    port: 5672
  - name: client-access-1
    port: 5671
  - name: clitool
    port: 25672
  - name: epmd
    port: 4369
  selector:
    app: $APP_INSTANCE_NAME
    component: rabbitmq-server
  type: LoadBalancer
